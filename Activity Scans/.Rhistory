alba <- read.csv("~/Dropbox/Thesis/Repo/thesis/Activity Scans/alba.csv")
alba <- within(alba,  {prop.forag = (forag / (forag + roost + preen))
flock.size = (forag + roost + preen)} )
# foraging
with(alba, plot(location, prop.forag, main='Proportion of birds foraging') )
with(alba, plot(location, rank(prop.forag), main='Rank prop. of birds foraging') )
# flock sizes
with(alba, plot(location, flock.size, main='Flock size') )
with(alba, plot(location, rank(flock.size), main='Rank flock size') )
# flock size and proportion foraging
with(alba, plot(flock.size, prop.forag))
abline(with(alba, lm(prop.forag ~ flock.size)))
source('~/Dropbox/Thesis/Repo/thesis/Activity Scans/park_v_north_foraging.R', echo=TRUE)
source('~/Dropbox/Thesis/Repo/thesis/Activity Scans/park_v_north_foraging.R', echo=TRUE)
source('~/Dropbox/Thesis/Repo/thesis/Activity Scans/park_v_north_foraging.R', echo=TRUE)
summary(lm(prop.forag ~ flock.size))
with(alba, summary(lm(prop.forag ~ flock.size)))
?glm
with(alba, summary(glm(prop.forag ~ flock.size, family=binomial(link = "logit"))))
View(alba)
sum(1,2)
with(alba, summary(glm(c(forag, sum(roost, preen)) ~ flock.size, family=binomial(link = "logit"))))
with(alba,
sum(roost, preen))
sum(c(roost, preen)))
with(alba, summary(glm(c(forag, (roost + preen)) ~ flock.size, family=binomial(link = "logit"))))
with(alba,
(roost + preen)
)
with(alba, forag)
with(alba, flock.size)
with(alba, c(forag, (roost + preen)))
with(alba, cbind(forag, (roost + preen)))
with(alba, summary(glm(cbind(forag, (roost + preen)) ~ flock.size, family=binomial(link = "logit"))))
??logi.hist.plot
??hist.plot
source('~/Dropbox/Thesis/Repo/thesis/Activity Scans/park_v_north_foraging.R', echo=TRUE)
alltemp <- read.csv("~/Dropbox/Thesis/Repo/thesis/Temperature/alltemp.csv")
View(alltemp)
read.csv("~/Dropbox/Thesis/Repo/thesis/Temperature/alltemp.csv")
temps <- read.csv("~/Dropbox/Thesis/Repo/thesis/Temperature/alltemp.csv")
rm(alltemp)
head(temps)
str(temps)
?POSIXlt
temps$time.p <- as.POSIXct(temps$time)
paste(temps$date, temps$time)
temps$time.p <- as.POSIXct(paste(temps$date, temps$time))
str(temps)
View(temps)
paste(temps$date, temps$time)
temps$time.p <- as.POSIXct(strptime(
paste(temps$date, temps$time),
tz='',
format='%d/%m/%y %H:%M:%S'
)
)
View(temps)
require(xts)
?strptime
temps$datetime.p <- as.POSIXct(strptime(
paste(temps$date, temps$time),
tz='',
format='%d/%m/%y %H:%M:%S'
)
)
temps$datetime.p <- as.POSIXct(strptime(
paste(temps$date, temps$time),
tz='',
format='%d/%m/%y %T'
))
View(temps)
temps$time.of.day <- as.POSIXct(strptime(temps$time,
tz='', format='%T'))
View(temps)
temps.xts <- xts(temps)
?xts
temps.xts <- xts(temps, order.by=index(temps$time.of.day))
temps.xts <- xts(temps, order.by=temps$time.of.day)
View(temps)
with(temps.xts, plot(time.of.day, swash.temp))
View(temps.xts)
swash.xts <- xts(subset(temps, select=c(time, swash.temp))
)
?Date
swash.xts <- xts(subset(temps, select=c(time, swash.temp)),
order.by=as.POSIXct(time, format='%T'))
time
swash.xts <- xts(subset(temps, select=c(time, swash.temp)),
order.by=as.POSIXct(temps$time, format='%T'))
plot(swash.xts)
View(temps.xts)
View(swash.xts)
plot(swash.xts$swash.temp)
?plot.xts
plot(swash.xts, y=swash.temp)
swash.xts <- xts(na.rm(subset(temps, select=c(time, swash.temp)),
order.by=as.POSIXct(temps$time, format='%T'))
)
swash.xts <- xts(na.omit(subset(temps, select=c(time, swash.temp))),
order.by=as.POSIXct(temps$time, format='%T'))
swash <- na.omit(subset(temps, select=c(time, swash.temp)))
swash <- na.omit(subset(temps, select=c(time, swash.temp)))
swash.xts <- xts(swash, order.by=as.POSIXct(swash$time, format='%T'))
plot(swash.xts, y=swash.temp)
View(swash.xts)
plot(swash.xts, y=swash.xts$swash.temp)
plot(swash.xts)
swash$time <- as.POSIXct(swash$time, format='%T')
with(swash, plot(time, swash.temp))
temps <- read.csv("~/Dropbox/Thesis/Repo/thesis/Temperature/alltemp.csv")
temps$time.of.day <- as.POSIXct(strptime(temps$time,
tz='', format='%T'))
swash <- na.omit(subset(temps, select=c(time, swash.temp)))
swash$time <- as.POSIXct(swash$time, format='%T')
with(swash, plot(time, swash.temp))
plot(swash.xts)
temps <- read.csv("~/Dropbox/Thesis/Repo/thesis/Temperature/alltemp.csv")
temps$time.of.day <- as.POSIXct(strptime(temps$time,
tz='', format='%T'))
swash <- na.omit(subset(temps, select=c(time, swash.temp)))
swash$time <- as.POSIXct(swash$time, format='%T')
with(swash, plot(time, swash.temp))
qm.swash <- lm(swash.temp ~ poly(time, 2), data=swash)
summary(qm)
summary(qm.swash)
str(qm.swash)
qm.swash$fitted.values
lines(swash$time, qm.swash$fitted.values)
?sort
swash <- swash[sort(swash$time),]
with(swash, plot(time, swash.temp))
View(swash)
swash <- na.omit(subset(temps, select=c(time, swash.temp)))
temps <- read.csv("~/Dropbox/Thesis/Repo/thesis/Temperature/alltemp.csv")
temps$time.of.day <- as.POSIXct(strptime(temps$time,
tz='', format='%T'))
swash <- na.omit(subset(temps, select=c(time, swash.temp)))
View(swash)
swash$time <- as.POSIXct(swash$time, format='%T')
sort(swash$time)
length(unique(sort(swash$time)))
order(swash$time)
swash <- swash[order(swash$time),]
with(swash, plot(time, swash.temp))
qm.swash <- lm(swash.temp ~ poly(time, 2), data=swash)
summary(qm.swash) # very significant
lines(swash$time, qm.swash$fitted.values)
with(swash, plot(time, swash.temp))
# fit parabola
qm.swash <- lm(swash.temp ~ poly(time, 2), data=swash)
summary(qm.swash) # very significant
lines(swash$time, qm.swash$fitted.values)
sand <- na.omit(subset(temps, select=c(time, sand.temp)))
# tell R how to understand times
sand$time <- as.POSIXct(sand$time, format='%T')
# order data by time (for plotting curve later)
sand <- sand[order(sand$time),]
with(sand, plot(time, sand.temp)) # plot relationship - looks curvey?
# fit parabola
qm.sand <- lm(sand.temp ~ poly(time, 2), data=sand) # 2nd order polynomial
summary(qm.sand) # very significant model, reasonable R^2 ~0.3
lines(sand$time, qm.sand$fitted.values) # a perfect curve :)
both.temps <- na.omit(subset(temps, select=c(sand.temp, swash.temp)))
with(both.temps, plot(sand.temp, swash.temp))
lm.bothtemp <- lm(swash.temp ~ sand.temp, data=both.temps)
abline(lm.bothtemp)
summary(lm.bothtemp)
View(temps)
with(temps, plot(longitude, latitude))
?plot
with(temps, plot(longitude, latitude, asp=1))
require(ggplot2)
?geom_smooth
require(ggplot2)
q <- ggplot(swash.temp, aes(x=time, y=swash.temp))
q <- ggplot(swash, aes(x=time, y=swash.temp))
q <- q + geom_point(shape=21)
print(q)
q <- q + theme_classic()
print(q)
q <- q + theme_classic(base_size-17)
q <- q + theme_classic(base_size=17)
print(q)
q <- q + geom_smooth(method=lm, formula='y ~ poly(x,2')
print(q)
q <- ggplot(swash, aes(x=time, y=swash.temp))
q <- q + geom_point(shape=21)
q <- q + geom_smooth(method=lm, formula='swash.temp ~ poly(time, 2')
q <- q + theme_classic(base_size=17)
print(q)
q <- ggplot(swash, aes(x=time, y=swash.temp))
q <- q + geom_point(shape=21)
q <- q + geom_smooth(method=lm, formula='swash.temp ~ poly(time, 2)')
q <- q + theme_classic(base_size=17)
print(q)
q <- ggplot(swash, aes(x=time, y=swash.temp))
q <- q + geom_point(shape=21)
q <- q + geom_smooth(method=lm, formula='y ~ poly(x, 2)')
q <- q + theme_classic(base_size=17)
print(q)
q <- ggplot(swash, aes(x=time, y=swash.temp))
q <- q + geom_smooth(method=lm, formula='y ~ poly(x, 2)')
q <- q + geom_point(shape=21)
q <- q + theme_classic(base_size=17)
print(q)
q <- ggplot(swash, aes(x=time, y=sand.temp))
q <- q + geom_smooth(method=lm, formula='y ~ poly(x, 2)')
q <- q + geom_point(shape=21)
q <- q + theme_classic(base_size=17)
print(q)
q <- ggplot(sand, aes(x=time, y=sand.temp))
q <- q + geom_smooth(method=lm, formula='y ~ poly(x, 2)')
q <- q + geom_point(shape=21)
q <- q + theme_classic(base_size=17)
print(q)
lm.flock.forag <- lm(prop.forag ~ flock.size
)
lm.flock.forag <- with(alba,lm(prop.forag ~ flock.size))
alba <- read.csv("~/Dropbox/Thesis/Repo/thesis/Activity Scans/alba.csv")
alba <- within(alba,  {prop.forag = (forag / (forag + roost + preen))
flock.size = (forag + roost + preen)} )
with(alba, plot(flock.size, prop.forag))
lm.flock.forag <- with(alba,lm(prop.forag ~ flock.size))
lm.flock.forag <- lm(prop.forag ~ flock.size, data=alba))
lm.flock.forag <- lm(prop.forag ~ flock.size, data=alba)
with(alba, summary(glm(cbind(forag, (roost + preen)) ~ flock.size, family=binomial(link = "logit"))))
?geom_histogram
